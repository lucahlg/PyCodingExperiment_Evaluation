EXECUTE
import pandas as pd

# Load the dataset
data_path = 'parkinsons_data/parkinsons.data'
df = pd.read_csv(data_path)

# Display the first few rows and summary information
df_info = df.info()
df_head = df.head()

df_info, df_head
STDOUT/STDERR
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 195 entries, 0 to 194
Data columns (total 24 columns):
 #   Column            Non-Null Count  Dtype  
---  ------            --------------  -----  
 0   name              195 non-null    object 
 1   MDVP:Fo(Hz)       195 non-null    float64
 2   MDVP:Fhi(Hz)      195 non-null    float64
 3   MDVP:Flo(Hz)      195 non-null    float64
 4   MDVP:Jitter(%)    195 non-null    float64
 5   MDVP:Jitter(Abs)  195 non-null    float64
 6   MDVP:RAP          195 non-null    float64
 7   MDVP:PPQ          195 non-null    float64
 8   Jitter:DDP        195 non-null    float64
 9   MDVP:Shimmer      195 non-null    float64
 10  MDVP:Shimmer(dB)  195 non-null    float64
 11  Shimmer:APQ3      195 non-null    float64
 12  Shimmer:APQ5      195 non-null    float64
 13  MDVP:APQ          195 non-null    float64
 14  Shimmer:DDA       195 non-null    float64
 15  NHR               195 non-null    float64
 16  HNR               195 non-null    float64
 17  status            195 non-null    int64  
 18  RPDE              195 non-null    float64
 19  DFA               195 non-null    float64
 20  spread1           195 non-null    float64
 21  spread2           195 non-null    float64
 22  D2                195 non-null    float64
 23  PPE               195 non-null    float64
dtypes: float64(22), int64(1), object(1)
memory usage: 36.7+ KB
(None,
              name  MDVP:Fo(Hz)  MDVP:Fhi(Hz)  MDVP:Flo(Hz)  MDVP:Jitter(%)  \
 0  phon_R01_S01_1      119.992       157.302        74.997         0.00784   
 1  phon_R01_S01_2      122.400       148.650       113.819         0.00968   
 2  phon_R01_S01_3      116.682       131.111       111.555         0.01050   
 3  phon_R01_S01_4      116.676       137.871       111.366         0.00997   
 4  phon_R01_S01_5      116.014       141.781       110.655         0.01284   
 
    MDVP:Jitter(Abs)  MDVP:RAP  MDVP:PPQ  Jitter:DDP  MDVP:Shimmer  ...  \
 0           0.00007   0.00370   0.00554     0.01109       0.04374  ...   
 1           0.00008   0.00465   0.00696     0.01394       0.06134  ...   
 2           0.00009   0.00544   0.00781     0.01633       0.05233  ...   
 3           0.00009   0.00502   0.00698     0.01505       0.05492  ...   
 4           0.00011   0.00655   0.00908     0.01966       0.06425  ...   
 
    Shimmer:DDA      NHR     HNR  status      RPDE       DFA   spread1  \
 0      0.06545  0.02211  21.033       1  0.414783  0.815285 -4.813031   
 1      0.09403  0.01929  19.085       1  0.458359  0.819521 -4.075192   
 2      0.08270  0.01309  20.651       1  0.429895  0.825288 -4.443179   
 3      0.08771  0.01353  20.644       1  0.434969  0.819235 -4.117501   
 4      0.10470  0.01767  19.649       1  0.417356  0.823484 -3.747787   
 
     spread2        D2       PPE  
 0  0.266482  2.301442  0.284654  
 1  0.335590  2.486855  0.368674  
 2  0.311173  2.342259  0.332634  
 3  0.334147  2.405554  0.368975  
 4  0.234513  2.332180  0.410335  
 
 [5 rows x 24 columns])
[Jupyter current working directory: /workspace]
[Jupyter Python interpreter: /openhands/poetry/openhands-ai-5O4_aCHf-py3.12/bin/python]
EXECUTE
from sklearn.preprocessing import MinMaxScaler

# Separate features and target variable
X = df.drop(columns=['name', 'status'])
y = df['status']

# Normalize the features
scaler = MinMaxScaler()
X_normalized = scaler.fit_transform(X)

# Create a new DataFrame with normalized features
df_normalized = pd.DataFrame(X_normalized, columns=X.columns)

df_normalized.head()  # Display the first few rows of the normalized data
STDOUT/STDERR
---------------------------------------------------------------------------
ModuleNotFoundError                       Traceback (most recent call last)
Cell In[1], line 1
----> 1 from sklearn.preprocessing import MinMaxScaler
      3 # Separate features and target variable
      4 X = df.drop(columns=['name', 'status'])

ModuleNotFoundError: No module named 'sklearn'
[Jupyter current working directory: /workspace]
[Jupyter Python interpreter: /openhands/poetry/openhands-ai-5O4_aCHf-py3.12/bin/python]
EXECUTE
%pip install scikit-learn
STDOUT/STDERR
Collecting scikit-learn
  Downloading scikit_learn-1.5.2-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (13 kB)
Requirement already satisfied: numpy>=1.19.5 in /openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages (from scikit-learn) (1.26.4)
Requirement already satisfied: scipy>=1.6.0 in /openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages (from scikit-learn) (1.14.1)
Requirement already satisfied: joblib>=1.2.0 in /openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages (from scikit-learn) (1.4.2)
Collecting threadpoolctl>=3.1.0 (from scikit-learn)
  Downloading threadpoolctl-3.5.0-py3-none-any.whl.metadata (13 kB)
Downloading scikit_learn-1.5.2-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (12.9 MB)
[?25l   ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 0.0/12.9 MB ? eta -:--:--
[2K   ╸━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 0.3/12.9 MB ? eta -:--:--
[2K   ━━╺━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 0.8/12.9 MB 2.4 MB/s eta 0:00:05
[2K   ━━━━╸━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 1.6/12.9 MB 3.0 MB/s eta 0:00:04
[2K   ━━━━━━━╺━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 2.4/12.9 MB 3.4 MB/s eta 0:00:04
[2K   ━━━━━━━━━━╸━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 3.4/12.9 MB 3.8 MB/s eta 0:00:03
[2K   ━━━━━━━━━━━━━╸━━━━━━━━━━━━━━━━━━━━━━━━━━ 4.5/12.9 MB 4.2 MB/s eta 0:00:03
[2K   ━━━━━━━━━━━━━━━━━╺━━━━━━━━━━━━━━━━━━━━━━ 5.5/12.9 MB 4.2 MB/s eta 0:00:02
[2K   ━━━━━━━━━━━━━━━━━━━━━╺━━━━━━━━━━━━━━━━━━ 6.8/12.9 MB 4.5 MB/s eta 0:00:02
[2K   ━━━━━━━━━━━━━━━━━━━━━━━━━╺━━━━━━━━━━━━━━ 8.1/12.9 MB 4.8 MB/s eta 0:00:02
[2K   ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╺━━━━━━━━━━ 9.4/12.9 MB 4.9 MB/s eta 0:00:01
[2K   ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╺━━━━━━ 10.7/12.9 MB 5.1 MB/s eta 0:00:01
[2K   ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╺━━ 12.1/12.9 MB 5.2 MB/s eta 0:00:01
[2K   ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 12.9/12.9 MB 5.2 MB/s eta 0:00:00
[?25hDownloading threadpoolctl-3.5.0-py3-none-any.whl (18 kB)
Installing collected packages: threadpoolctl, scikit-learn
Successfully installed scikit-learn-1.5.2 threadpoolctl-3.5.0

[notice] A new release of pip is available: 24.2 -> 24.3.1
[notice] To update, run: pip install --upgrade pip
Note: you may need to restart the kernel to use updated packages.
[Jupyter current working directory: /workspace]
[Jupyter Python interpreter: /openhands/poetry/openhands-ai-5O4_aCHf-py3.12/bin/python]
EXECUTE
from sklearn.preprocessing import MinMaxScaler

# Separate features and target variable
X = df.drop(columns=['name', 'status'])
y = df['status']

# Normalize the features
scaler = MinMaxScaler()
X_normalized = scaler.fit_transform(X)

# Create a new DataFrame with normalized features
df_normalized = pd.DataFrame(X_normalized, columns=X.columns)

df_normalized.head()  # Display the first few rows of the normalized data
STDOUT/STDERR
   MDVP:Fo(Hz)  MDVP:Fhi(Hz)  MDVP:Flo(Hz)  MDVP:Jitter(%)  MDVP:Jitter(Abs)  \
0     0.184308      0.112592      0.054815        0.195680          0.249012   
1     0.198327      0.094930      0.278323        0.254130          0.288538   
2     0.165039      0.059128      0.265288        0.280178          0.328063   
3     0.165004      0.072927      0.264200        0.263342          0.328063   
4     0.161150      0.080909      0.260107        0.354511          0.407115   

   MDVP:RAP  MDVP:PPQ  Jitter:DDP  MDVP:Shimmer  MDVP:Shimmer(dB)  ...  \
0  0.145472  0.247588    0.145288      0.312215          0.280197  ...   
1  0.191233  0.323687    0.191042      0.472887          0.444536  ...   
2  0.229287  0.369239    0.229411      0.390634          0.326212  ...   
3  0.209056  0.324759    0.208862      0.414278          0.354971  ...   
4  0.282755  0.437299    0.282870      0.499452          0.410025  ...   

   MDVP:APQ  Shimmer:DDA       NHR       HNR      RPDE       DFA   spread1  \
0  0.172448     0.332584  0.068307  0.511745  0.369155  0.960148  0.569875   
1  0.279424     0.516048  0.059331  0.432577  0.470830  0.977024  0.703277   
2  0.219848     0.443317  0.039596  0.496220  0.404416  1.000000  0.636745   
3  0.233785     0.475478  0.040997  0.495936  0.416255  0.975885  0.695627   
4  0.286852     0.584542  0.054174  0.455499  0.375159  0.992813  0.762472   

    spread2        D2       PPE  
0  0.585765  0.390661  0.497310  
1  0.741337  0.473145  0.671326  
2  0.686371  0.408819  0.596682  
3  0.738089  0.436977  0.671949  
4  0.513798  0.404336  0.757611  

[5 rows x 22 columns]
[Jupyter current working directory: /workspace]
[Jupyter Python interpreter: /openhands/poetry/openhands-ai-5O4_aCHf-py3.12/bin/python]
EXECUTE
from sklearn.preprocessing import StandardScaler

# Standardize the features
scaler = StandardScaler()
X_standardized = scaler.fit_transform(X_normalized)

# Create a new DataFrame with standardized features
df_standardized = pd.DataFrame(X_standardized, columns=X.columns)

df_standardized.head()  # Display the first few rows of the standardized data
STDOUT/STDERR
   MDVP:Fo(Hz)  MDVP:Fhi(Hz)  MDVP:Flo(Hz)  MDVP:Jitter(%)  MDVP:Jitter(Abs)  \
0    -0.829300     -0.436165     -0.952037        0.334914          0.749759   
1    -0.770972     -0.530974     -0.057721        0.715418          1.037674   
2    -0.909476     -0.723168     -0.109875        0.884991          1.325589   
3    -0.909622     -0.649092     -0.114229        0.775389          1.325589   
4    -0.925657     -0.606245     -0.130608        1.368893          1.901418   

   MDVP:RAP  MDVP:PPQ  Jitter:DDP  MDVP:Shimmer  MDVP:Shimmer(dB)  ...  \
0  0.132963  0.760800    0.131755      0.745985          0.739536  ...   
1  0.453892  1.276809    0.452684      1.681731          1.768464  ...   
2  0.720770  1.585687    0.721813      1.202693          1.027636  ...   
3  0.578885  1.284076    0.577677      1.340396          1.207698  ...   
4  1.095750  2.047187    1.096793      1.836448          1.552389  ...   

   MDVP:APQ  Shimmer:DDA       NHR       HNR      RPDE       DFA   spread1  \
0  0.332985     0.607532 -0.067893 -0.193225 -0.807838  1.760814  0.801323   
1  1.159454     1.548254 -0.137843 -0.634508 -0.387524  1.837562  1.479853   
2  0.699187     1.175323 -0.291633 -0.279760 -0.662075  1.942048  1.141445   
3  0.806859     1.340229 -0.280719 -0.281346 -0.613134  1.832380  1.440945   
4  1.216839     1.899461 -0.178026 -0.506745 -0.783021  1.909364  1.780940   

    spread2        D2       PPE  
0  0.480477 -0.210531  0.868886  
1  1.311185  0.275077  1.803605  
2  1.017682 -0.103629  1.402661  
3  1.293840  0.062145  1.806954  
4  0.096195 -0.130026  2.267082  

[5 rows x 22 columns]
[Jupyter current working directory: /workspace]
[Jupyter Python interpreter: /openhands/poetry/openhands-ai-5O4_aCHf-py3.12/bin/python]
EXECUTE
from sklearn.model_selection import train_test_split

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X_standardized, y, test_size=0.2, random_state=42)

# Display the shapes of the resulting datasets
(X_train.shape, X_test.shape, y_train.shape, y_test.shape)
STDOUT/STDERR
((156, 22), (39, 22), (156,), (39,))
[Jupyter current working directory: /workspace]
[Jupyter Python interpreter: /openhands/poetry/openhands-ai-5O4_aCHf-py3.12/bin/python]
EXECUTE
from sklearn.linear_model import LogisticRegression
from sklearn.model_selection import GridSearchCV
from sklearn.metrics import f1_score

# Set up the logistic regression model with L2 regularization
log_reg = LogisticRegression(solver='liblinear')

# Define the parameter grid for cross-validation
param_grid = {'C': [0.001, 0.01, 0.1, 1, 10, 100]}

# Set up GridSearchCV to find the best regularization parameter
grid_search = GridSearchCV(log_reg, param_grid, scoring='f1', cv=5)
grid_search.fit(X_train, y_train)

# Get the best parameters and the best score
best_params = grid_search.best_params_
best_f1_score = grid_search.best_score_

best_params, best_f1_score
STDOUT/STDERR
({'C': 10}, 0.904927966496712)
[Jupyter current working directory: /workspace]
[Jupyter Python interpreter: /openhands/poetry/openhands-ai-5O4_aCHf-py3.12/bin/python]
EXECUTE
from sklearn.neighbors import KNeighborsClassifier

# Set up the KNN model
knn = KNeighborsClassifier()

# Define the parameter grid for K
param_grid_knn = {'n_neighbors': range(1, 21)}  # Testing K values from 1 to 20

# Set up GridSearchCV to find the best K
grid_search_knn = GridSearchCV(knn, param_grid_knn, scoring='f1', cv=5)
grid_search_knn.fit(X_train, y_train)

# Get the best parameters and the best score
best_k = grid_search_knn.best_params_
best_knn_f1_score = grid_search_knn.best_score_

best_k, best_knn_f1_score
STDOUT/STDERR
({'n_neighbors': 1}, 0.9526868686868687)
[Jupyter current working directory: /workspace]
[Jupyter Python interpreter: /openhands/poetry/openhands-ai-5O4_aCHf-py3.12/bin/python]
EXECUTE
from sklearn.neural_network import MLPClassifier

# Set up the neural network model
mlp = MLPClassifier(max_iter=1000)

# Define the parameter grid for the width of the hidden layer
param_grid_mlp = {'hidden_layer_sizes': [(i,) for i in range(1, 21)]}  # Testing widths from 1 to 20

# Set up GridSearchCV to find the best hidden layer size
grid_search_mlp = GridSearchCV(mlp, param_grid_mlp, scoring='f1', cv=5)
grid_search_mlp.fit(X_train, y_train)

# Get the best parameters and the best score
best_hidden_layer_size = grid_search_mlp.best_params_
best_mlp_f1_score = grid_search_mlp.best_score_

best_hidden_layer_size, best_mlp_f1_score
STDOUT/STDERR
/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/sklearn/neural_network/_multilayer_perceptron.py:690: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (1000) reached and the optimization hasn't converged yet.
  warnings.warn(
/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/sklearn/neural_network/_multilayer_perceptron.py:690: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (1000) reached and the optimization hasn't converged yet.
  warnings.warn(
/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/sklearn/neural_network/_multilayer_perceptron.py:690: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (1000) reached and the optimization hasn't converged yet.
  warnings.warn(
/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/sklearn/neural_network/_multilayer_perceptron.py:690: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (1000) reached and the optimization hasn't converged yet.
  warnings.warn(
/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/sklearn/neural_network/_multilayer_perceptron.py:690: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (1000) reached and the optimization hasn't converged yet.
  warnings.warn(
/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/sklearn/neural_network/_multilayer_perceptron.py:690: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (1000) reached and the optimization hasn't converged yet.
  warnings.warn(
/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/sklearn/neural_network/_multilayer_perceptron.py:690: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (1000) reached and the optimization hasn't converged yet.
  warnings.warn(
/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/sklearn/neural_network/_multilayer_perceptron.py:690: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (1000) reached and the optimization hasn't converged yet.
  warnings.warn(
/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/sklearn/neural_network/_multilayer_perceptron.py:690: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (1000) reached and the optimization hasn't converged yet.
  warnings.warn(
/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/sklearn/neural_network/_multilayer_perceptron.py:690: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (1000) reached and the optimization hasn't converged yet.
  warnings.warn(
/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/sklearn/neural_network/_multilayer_perceptron.py:690: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (1000) reached and the optimization hasn't converged yet.
  warnings.warn(
/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/sklearn/neural_network/_multilayer_perceptron.py:690: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (1000) reached and the optimization hasn't converged yet.
  warnings.warn(
/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/sklearn/neural_network/_multilayer_perceptron.py:690: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (1000) reached and the optimization hasn't converged yet.
  warnings.warn(
/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/sklearn/neural_network/_multilayer_perceptron.py:690: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (1000) reached and the optimization hasn't converged yet.
  warnings.warn(
/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/sklearn/neural_network/_multilayer_perceptron.py:690: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (1000) reached and the optimization hasn't converged yet.
  warnings.warn(
/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/sklearn/neural_network/_multilayer_perceptron.py:690: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (1000) reached and the optimization hasn't converged yet.
  warnings.warn(
/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/sklearn/neural_network/_multilayer_perceptron.py:690: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (1000) reached and the optimization hasn't converged yet.
  warnings.warn(
/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/sklearn/neural_network/_multilayer_perceptron.py:690: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (1000) reached and the optimization hasn't converged yet.
  warnings.warn(
/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/sklearn/neural_network/_multilayer_perceptron.py:690: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (1000) reached and the optimization hasn't converged yet.
  warnings.warn(
/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/sklearn/neural_network/_multilayer_perceptron.py:690: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (1000) reached and the optimization hasn't converged yet.
  warnings.warn(
/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/sklearn/neural_network/_multilayer_perceptron.py:690: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (1000) reached and the optimization hasn't converged yet.
  warnings.warn(
/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/sklearn/neural_network/_multilayer_perceptron.py:690: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (1000) reached and the optimization hasn't converged yet.
  warnings.warn(
/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/sklearn/neural_network/_multilayer_perceptron.py:690: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (1000) reached and the optimization hasn't converged yet.
  warnings.warn(
/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/sklearn/neural_network/_multilayer_perceptron.py:690: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (1000) reached and the optimization hasn't converged yet.
  warnings.warn(
/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/sklearn/neural_network/_multilayer_perceptron.py:690: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (1000) reached and the optimization hasn't converged yet.
  warnings.warn(
/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/sklearn/neural_network/_multilayer_perceptron.py:690: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (1000) reached and the optimization hasn't converged yet.
  warnings.warn(
/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/sklearn/neural_network/_multilayer_perceptron.py:690: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (1000) reached and the optimization hasn't converged yet.
  warnings.warn(
/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/sklearn/neural_network/_multilayer_perceptron.py:690: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (1000) reached and the optimization hasn't converged yet.
  warnings.warn(
/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/sklearn/neural_network/_multilayer_perceptron.py:690: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (1000) reached and the optimization hasn't converged yet.
  warnings.warn(
/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/sklearn/neural_network/_multilayer_perceptron.py:690: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (1000) reached and the optimization hasn't converged yet.
  warnings.warn(
/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/sklearn/neural_network/_multilayer_perceptron.py:690: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (1000) reached and the optimization hasn't converged yet.
  warnings.warn(
/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/sklearn/neural_network/_multilayer_perceptron.py:690: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (1000) reached and the optimization hasn't converged yet.
  warnings.warn(
/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/sklearn/neural_network/_multilayer_perceptron.py:690: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (1000) reached and the optimization hasn't converged yet.
  warnings.warn(
/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/sklearn/neural_network/_multilayer_perceptron.py:690: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (1000) reached and the optimization hasn't converged yet.
  warnings.warn(
/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/sklearn/neural_network/_multilayer_perceptron.py:690: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (1000) reached and the optimization hasn't converged yet.
  warnings.warn(
/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/sklearn/neural_network/_multilayer_perceptron.py:690: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (1000) reached and the optimization hasn't converged yet.
  warnings.warn(
/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/sklearn/neural_network/_multilayer_perceptron.py:690: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (1000) reached and the optimization hasn't converged yet.
  warnings.warn(
/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/sklearn/neural_network/_multilayer_perceptron.py:690: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (1000) reached and the optimization hasn't converged yet.
  warnings.warn(
/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/sklearn/neural_network/_multilayer_perceptron.py:690: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (1000) reached and the optimization hasn't converged yet.
  warnings.warn(
/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/sklearn/neural_network/_multilayer_perceptron.py:690: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (1000) reached and the optimization hasn't converged yet.
  warnings.warn(
/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/sklearn/neural_network/_multilayer_perceptron.py:690: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (1000) reached and the optimization hasn't converged yet.
  warnings.warn(
/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/sklearn/neural_network/_multilayer_perceptron.py:690: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (1000) reached and the optimization hasn't converged yet.
  warnings.warn(
/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/sklearn/neural_network/_multilayer_perceptron.py:690: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (1000) reached and the optimization hasn't converged yet.
  warnings.warn(
/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/sklearn/neural_network/_multilayer_perceptron.py:690: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (1000) reached and the optimization hasn't converged yet.
  warnings.warn(
/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/sklearn/neural_network/_multilayer_perceptron.py:690: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (1000) reached and the optimization hasn't converged yet.
  warnings.warn(
/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/sklearn/neural_network/_multilayer_perceptron.py:690: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (1000) reached and the optimization hasn't converged yet.
  warnings.warn(
/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/sklearn/neural_network/_multilayer_perceptron.py:690: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (1000) reached and the optimization hasn't converged yet.
  warnings.warn(
/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/sklearn/neural_network/_multilayer_perceptron.py:690: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (1000) reached and the optimization hasn't converged yet.
  warnings.warn(
/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/sklearn/neural_network/_multilayer_perceptron.py:690: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (1000) reached and the optimization hasn't converged yet.
  warnings.warn(
/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/sklearn/neural_network/_multilayer_perceptron.py:690: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (1000) reached and the optimization hasn't converged yet.
  warnings.warn(
/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/sklearn/neural_network/_multilayer_perceptron.py:690: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (1000) reached and the optimization hasn't converged yet.
  warnings.warn(
/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/sklearn/neural_network/_multilayer_perceptron.py:690: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (1000) reached and the optimization hasn't converged yet.
  warnings.warn(
/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/sklearn/neural_network/_multilayer_perceptron.py:690: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (1000) reached and the optimization hasn't converged yet.
  warnings.warn(
/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/sklearn/neural_network/_multilayer_perceptron.py:690: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (1000) reached and the optimization hasn't converged yet.
  warnings.warn(
/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/sklearn/neural_network/_multilayer_perceptron.py:690: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (1000) reached and the optimization hasn't converged yet.
  warnings.warn(
/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/sklearn/neural_network/_multilayer_perceptron.py:690: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (1000) reached and the optimization hasn't converged yet.
  warnings.warn(
/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/sklearn/neural_network/_multilayer_perceptron.py:690: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (1000) reached and the optimization hasn't converged yet.
  warnings.warn(
/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/sklearn/neural_network/_multilayer_perceptron.py:690: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (1000) reached and the optimization hasn't converged yet.
  warnings.warn(
/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/sklearn/neural_network/_multilayer_perceptron.py:690: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (1000) reached and the optimization hasn't converged yet.
  warnings.warn(
/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/sklearn/neural_network/_multilayer_perceptron.py:690: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (1000) reached and the optimization hasn't converged yet.
  warnings.warn(
/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/sklearn/neural_network/_multilayer_perceptron.py:690: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (1000) reached and the optimization hasn't converged yet.
  warnings.warn(
/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/sklearn/neural_network/_multilayer_perceptron.py:690: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (1000) reached and the optimization hasn't converged yet.
  warnings.warn(
/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/sklearn/neural_network/_multilayer_perceptron.py:690: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (1000) reached and the optimization hasn't converged yet.
  warnings.warn(
/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/sklearn/neural_network/_multilayer_perceptron.py:690: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (1000) reached and the optimization hasn't converged yet.
  warnings.warn(
/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/sklearn/neural_network/_multilayer_perceptron.py:690: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (1000) reached and the optimization hasn't converged yet.
  warnings.warn(
/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/sklearn/neural_network/_multilayer_perceptron.py:690: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (1000) reached and the optimization hasn't converged yet.
  warnings.warn(
/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/sklearn/neural_network/_multilayer_perceptron.py:690: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (1000) reached and the optimization hasn't converged yet.
  warnings.warn(
/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/sklearn/neural_network/_multilayer_perceptron.py:690: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (1000) reached and the optimization hasn't converged yet.
  warnings.warn(
/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/sklearn/neural_network/_multilayer_perceptron.py:690: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (1000) reached and the optimization hasn't converged yet.
  warnings.warn(
/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/sklearn/neural_network/_multilayer_perceptron.py:690: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (1000) reached and the optimization hasn't converged yet.
  warnings.warn(
({'hidden_layer_sizes': (11,)}, 0.9541932367149759)
[Jupyter current working directory: /workspace]
[Jupyter Python interpreter: /openhands/poetry/openhands-ai-5O4_aCHf-py3.12/bin/python]
EXECUTE
from sklearn.metrics import precision_score, recall_score, accuracy_score

# Evaluate Logistic Regression
log_reg_best = LogisticRegression(C=best_params['C'], solver='liblinear')
log_reg_best.fit(X_train, y_train)
y_pred_log_reg = log_reg_best.predict(X_test)

# Calculate metrics for Logistic Regression
log_reg_precision = precision_score(y_test, y_pred_log_reg)
log_reg_recall = recall_score(y_test, y_pred_log_reg)
log_reg_f1 = f1_score(y_test, y_pred_log_reg)
log_reg_accuracy = accuracy_score(y_test, y_pred_log_reg)

# Store results
log_reg_results = {
    'Model': 'Logistic Regression',
    'Best Parameters': best_params,
    'Precision': log_reg_precision,
    'Recall': log_reg_recall,
    'F1 Score': log_reg_f1,
    'Accuracy': log_reg_accuracy
}

log_reg_results
STDOUT/STDERR
{'Model': 'Logistic Regression',
 'Best Parameters': {'C': 10},
 'Precision': 0.9117647058823529,
 'Recall': 0.96875,
 'F1 Score': 0.9393939393939394,
 'Accuracy': 0.8974358974358975}
[Jupyter current working directory: /workspace]
[Jupyter Python interpreter: /openhands/poetry/openhands-ai-5O4_aCHf-py3.12/bin/python]
EXECUTE
# Evaluate KNN
knn_best = KNeighborsClassifier(n_neighbors=best_k['n_neighbors'])
knn_best.fit(X_train, y_train)
y_pred_knn = knn_best.predict(X_test)

# Calculate metrics for KNN
knn_precision = precision_score(y_test, y_pred_knn)
knn_recall = recall_score(y_test, y_pred_knn)
knn_f1 = f1_score(y_test, y_pred_knn)
knn_accuracy = accuracy_score(y_test, y_pred_knn)

# Store results
knn_results = {
    'Model': 'K-Nearest Neighbors',
    'Best Parameters': best_k,
    'Precision': knn_precision,
    'Recall': knn_recall,
    'F1 Score': knn_f1,
    'Accuracy': knn_accuracy
}

knn_results
STDOUT/STDERR
{'Model': 'K-Nearest Neighbors',
 'Best Parameters': {'n_neighbors': 1},
 'Precision': 1.0,
 'Recall': 0.96875,
 'F1 Score': 0.9841269841269841,
 'Accuracy': 0.9743589743589743}
[Jupyter current working directory: /workspace]
[Jupyter Python interpreter: /openhands/poetry/openhands-ai-5O4_aCHf-py3.12/bin/python]
EXECUTE
# Evaluate Neural Network
mlp_best = MLPClassifier(hidden_layer_sizes=best_hidden_layer_size['hidden_layer_sizes'], max_iter=1000)
mlp_best.fit(X_train, y_train)
y_pred_mlp = mlp_best.predict(X_test)

# Calculate metrics for Neural Network
mlp_precision = precision_score(y_test, y_pred_mlp)
mlp_recall = recall_score(y_test, y_pred_mlp)
mlp_f1 = f1_score(y_test, y_pred_mlp)
mlp_accuracy = accuracy_score(y_test, y_pred_mlp)

# Store results
mlp_results = {
    'Model': 'Neural Network',
    'Best Parameters': best_hidden_layer_size,
    'Precision': mlp_precision,
    'Recall': mlp_recall,
    'F1 Score': mlp_f1,
    'Accuracy': mlp_accuracy
}

mlp_results
STDOUT/STDERR
{'Model': 'Neural Network',
 'Best Parameters': {'hidden_layer_sizes': (11,)},
 'Precision': 0.9393939393939394,
 'Recall': 0.96875,
 'F1 Score': 0.9538461538461539,
 'Accuracy': 0.9230769230769231}
[Jupyter current working directory: /workspace]
[Jupyter Python interpreter: /openhands/poetry/openhands-ai-5O4_aCHf-py3.12/bin/python]
EXECUTE
# Calculate the baseline accuracy (majority class)
majority_class = y.value_counts().idxmax()
baseline_accuracy = (y == majority_class).mean()

baseline_accuracy
STDOUT/STDERR
0.7538461538461538
[Jupyter current working directory: /workspace]
[Jupyter Python interpreter: /openhands/poetry/openhands-ai-5O4_aCHf-py3.12/bin/python]